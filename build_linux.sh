#!/usr/bin/env bash
################################################################################
# Author: @gubatron
# Modified: 2025 - Refactored for native Linux builds
# This script builds a native fwplayer_linux binary for the host Linux architecture
# functions are defined in build-functions.sh
# ffmpeg codec flag related variables are generated by prepare-ffmpeg-flags.c
# as output strings which are evaluated by prepare_ffmpeg_flags
################################################################################
#set -x

if [ -z "${OPENSSL_ROOT}" ]; then
    set +x
    clear
    echo "OPENSSL_ROOT not set."
    echo
    echo "   It should point to an openssl installation folder (not the sources)"
    echo
    echo "   For Linux native builds:"
    echo "   export OPENSSL_ROOT=${HOME}/src/openssl"
    echo
    exit 1
fi

export PKG_CONFIG_PATH="${OPENSSL_ROOT}/lib/pkgconfig"
source build-functions.sh

# Verify we're on Linux
./is_linux
if [ $? -ne 1 ]; then
    echo "Error: Linux builds must be done on Linux"
    exit 1
fi

ARCH=`arch`
if [ ${ARCH} == "i386" ]; then
    ARCH=x86_64
fi

if [ ${ARCH} == "aarch64" ]; then
    ARCH=arm64
fi

echo "Building native Linux player for architecture: ${ARCH}"
press_any_key

prepare_enabled_protocol_flags
if [ -z "${ENABLED_PROTOCOLS_FLAGS}" ]; then
  echo "Error: ENABLED_PROTOCOLS_FLAGS is unset"
  echo ${ENABLED_PROTOCOLS_FLAGS}
  exit 1
fi

checkout_mplayer
if [ ! -d "mplayer-trunk" ]; then
  echo "Error: mplayer-trunk not checked out, nothing to build"
  echo ""
  exit 1
fi

# Check out ffmpeg inside mplayer folder
download_ffmpeg
if [ ! -d "mplayer-trunk/ffmpeg" ]; then
  echo "Error: can't find 'ffmpeg' folder inside mplayer-trunk/, can't prepare codec flags without it"
  echo
  exit 1
fi

prepare_ffmpeg_flags
verify_ffmpeg_flags || exit 1

# First we need to build ffmpeg
configure_ffmpeg_linux
make -j 8
popd
echo "FFMpeg compilation finished"
press_any_key

################################################################################
# Configure MPlayer Build for Linux
################################################################################
pushd mplayer-trunk

WARNING_FLAGS='-Wno-unused-function -Wno-switch -Wno-expansion-to-defined -Wno-deprecated-declarations -Wno-shift-negative-value -Wno-pointer-sign -Wno-parentheses -Wdangling-else'

EXTRA_LDFLAGS="-Lffmpeg/libavutil -lavutil -L${OPENSSL_ROOT}/lib -lssl -lcrypto"

EXTRA_CFLAGS="${WARNING_FLAGS} -Os -fPIC -I${OPENSSL_ROOT}/include"

CONFIG_OPTS=''

./configure \
${CONFIG_OPTS} \
--enable-openssl-nondistributable \
--disable-gnutls \
--disable-iconv \
--disable-mencoder \
--disable-vidix \
--disable-vidix-pcidb \
--disable-matrixview \
--disable-xss \
--disable-tga \
--disable-pnm \
--disable-md5sum \
--disable-yuv4mpeg \
--disable-quartz \
--disable-vcd \
--disable-bluray \
--disable-dvdnav \
--disable-dvdread \
--disable-alsa \
--disable-ossaudio \
--disable-arts \
--disable-esd \
--disable-pulse \
--disable-jack \
--disable-openal \
--disable-nas \
--disable-sgiaudio \
--disable-sunaudio \
--disable-kai \
--disable-dart \
--disable-win32waveout \
--disable-select \
--disable-win32dll \
--disable-vo-fbdev \
--disable-vo-x11 \
--disable-vo-opengl \
--disable-vo-sdl \
--disable-vo-vesa \
--disable-vo-dga \
--disable-vo-vdpau \
--disable-vo-xv \
--disable-vo-directfb \
--disable-vo-matrixview \
--disable-vo-caca \
--disable-vo-aa \
--disable-vo-ggi \
--disable-vo-winvidix \
--disable-vo-cvidix \
--disable-vo-3dfx \
--disable-vo-xmga \
--disable-vo-mga \
--disable-vo-tdfx_vid \
--disable-vo-s3fb \
--disable-vo-wii \
--disable-vo-zr \
--disable-vo-zr2 \
--disable-vo-dxr3 \
--disable-vo-dxr2 \
--extra-cflags="${EXTRA_CFLAGS}" \
--extra-ldflags="${EXTRA_LDFLAGS}"

press_any_key
make -j 8

strip_and_upx_final_executable "linux" "${ARCH}"

popd
pwd
set +x
